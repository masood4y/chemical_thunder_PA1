(timer time, window size, packet size, rtt calculation, writing to file; all determined asynchronously)

Main Categories:

- Connection Set up
- Data Exchange
- Connection Teardown



Connection Setup:
    Sender States:
            - set up listening port before anything
        - Start Connection State: send SYNC bit = 1 (connection request) to dest port #, 
                start timer, wait.
            if (timer end), go to Start Connection State. 
            else if (SYNC_ACK = 1 received), make current and max window size,
                set up other details, goto: Send_N_Packets 


    Receiver States:
        - Wait_Connection: do nothing, wait for connection
            if (SYNC = 1 received), set up UDP port, set up Receive Window,
                send SYNC_ACK = 1 and writeRate back to destination, goto: state Wait_for_Packet
            else, do nothing/wait. 
     



Data Exchange:
    Sender States:
        - Send_N_Packets: send all packets in current window size available, start timer for first packet sent,
                goto: Wait_for_ACK


        - Wait_for_ACK: do nothing/wait
            if (ACK_Valid_received (its a proper Acknowledgement for valid seq#)), update window/packet size, adjust Sliding Window,
                goto: Send_N_Packets
            else if (timeout), adjust window/packet, size goto: Send_N_Packets.
            else if (all data completely Acknowledged), goto: Send_FIN



    Receiver States:
        - Wait_for_Packet: do nothing/wait
            if (SYNC = 1 received), send SYNC_ACK = 1 and writeRate back to destination, go to state Wait_for_Packet
            else if (valid Seq packet) start small countdown-timer, adjust receive window, take care of data, update Ack #,
                goto: Wait_for_Pipeline
            else if (duplicate packet), send Cumulative Acknowledgement, goto: Wait_for_Packet
            else if (FIN = 1 received), goto: Send FIN_ACK


        - Wait_for_Pipeline: do nothing/wait
            if (valid Seq packet), adjust receive window, update Ack #, take care of data, goto: Wait_for_Pipeline
            if (small countdown timer), send Cumulative Acknowledgement, goto: Wait_for_Packet





Connection Teardown:
    Sender States:
        - Send_FIN: send empty packet with FIN = 1, start timer for this packet,
                goto: Wait_FIN_Ack


        - Wait_FIN_Ack: do nothing/wait
            if (timeout), goto: Send_FIN
            else if (FIN_ACK = 1 received), done 



    Receiver States:
        - Send FIN_ACK: send FIN_ACK = 1, start long timer, goto: Wait_inCase

        - Wait_inCase: do nothing/wait
            if (long timer finish), done
            else if (FIN = 1 received), goto: Send FIN_ACK
        
        
        





